apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-mock
  namespace: default
  labels:
    app.kubernetes.io/name: api-mock
    app.kubernetes.io/instance: api-mock
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/component: api
    app.kubernetes.io/managed-by: argo-cd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: api-mock
      app.kubernetes.io/instance: api-mock
      app.kubernetes.io/component: api
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-mock
        app.kubernetes.io/instance: api-mock
        app.kubernetes.io/version: 0.0.1
        app.kubernetes.io/component: api
        app.kubernetes.io/managed-by: argo-cd
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: api-mock
                    app.kubernetes.io/instance: api-mock
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 5
      containers:
        - name: api-mock
          image: docker.io/juanariza131/api-mock:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: LOG_LEVEL
              value: "debug"
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: api-mock-auth
                  key: api-token
            - name: SUB_ROUTES
              value: "/foo,/bar"
            - name: FAILURE_RESP_BODY
              value: "{\"error\": {\"code\": 100, \"message\": \"Resource not found\"}}"
            - name: SUCCESS_RESP_BODY
              value: "{\"success\": true}"
            - name: SUCCESS_RATIO
              value: "0.9"
            - name: RATE_LIMIT
              value: "100"
            - name: RATE_EXCEEDED_RESP_BODY
              value: "{\"error\": {\"code\": 200, \"message\": \"Rate limit exceeded\"}}"
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            tcpSocket:
              port: http
          livenessProbe:
            httpGet:
              path: /live
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources: {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: tmp
          emptyDir: {}
